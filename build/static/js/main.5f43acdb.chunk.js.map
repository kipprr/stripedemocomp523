{"version":3,"sources":["UserProvider.js","StripeCheckout.js","SignUp.js","Success.js","App.js","index.js"],"names":["UserContext","React","createContext","user","UserProvider","Component","state","userUpdate","a","setState","componentDidMount","this","_isMounted","auth","onAuthStateChanged","userAuth","componentWillUnmount","render","Provider","value","props","children","stripePromise","loadStripe","StripeCheckout","handleClick","stripe","db","collection","doc","add","price","success_url","window","location","origin","cancel_url","onSnapshot","snap","data","error","sessionId","alert","message","redirectToCheckout","role","onClick","contextType","email","password","confPassword","first","last","createUserWithEmailAndPassword","result","open","updateProfile","firstName","lastName","SignUp","prop","useState","setEmail","setPassword","setConf","setFirst","setLast","className","type","placeholder","onChange","e","target","proceedClick","Success","page","createBrowserHistory","App","useContext","history","path","exact","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","currentUser","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5f43acdb.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport { db, auth } from './index.js';\n\nexport const UserContext = React.createContext({user: null});\n\nclass UserProvider extends Component {\n    state = {\n        user: null\n    };\n\n    userUpdate = async (user) => {\n        this.setState({user: user});\n    }\n\n    componentDidMount = () => {\n        this._isMounted = true;\n        auth.onAuthStateChanged(userAuth => {\n            this._isMounted && this.userUpdate(userAuth);\n        })\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n\n\n    render() {\n        return(\n            <UserContext.Provider value={{user:this.state.user}}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\nexport default UserProvider;","import React, {useState, useContext} from 'react';\nimport {db, currentUser} from './index.js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport UserContext from './UserProvider';\n \nconst stripePromise = loadStripe('pk_test_51Hild4Ck7G164RWSPuLOiwl0ZRL4U3u9EmHJQegcFC5f16m22AZ1Hzb0UfjUQhlvCf5WXdgn7xBY6Pncs75FBjmw00lZY9IVjq');\n\n\nclass StripeCheckout extends React.Component { \n    static contextType = UserContext;\n    \n    \n    \n    handleClick = async () => {\n      // Get Stripe.js instance\n    \n      const stripe = await stripePromise;\n\n    // console.log(this.context);\n    // console.log(this.context.state);\n    // console.log(this.context.state.user);\n    // console.log(this.context.state.user.uid);\n  \n    // Call your backend to create the Checkout Session\n    \n    const docRef = await db\n      .collection('customers')\n      .doc('3CpZcLVF8yfLoPcZ1dYIhGNK6UE3')\n      .collection('checkout_sessions')\n      .add({\n        price: 'price_1Hir87Ck7G164RWS600cMmlw',\n        success_url: window.location.origin + '/success',\n        cancel_url: window.location.origin + '/checkout',\n      });\n    // Wait for the CheckoutSession to get attached by the extension\n    docRef.onSnapshot((snap) => {\n      const { error, sessionId } = snap.data();\n      if (error) {\n        // Show an error to your customer and then inspect your function logs.\n        alert(`An error occured: ${error.message}`);\n      }\n      if (sessionId) {\n        // We have a session, let's redirect to Checkout\n        // Init Stripe\n        stripe.redirectToCheckout({ sessionId });\n      }\n    });\n    }\n\n    render() {\n        return(\n            <button role=\"link\" onClick={this.handleClick}>\n                Checkout\n            </button>\n        )\n    }\n}\n\n\n\n\n\n\nexport default StripeCheckout;","import React, {useState, useContext} from 'react';\nimport {auth, currentUser} from './index.js';\nimport page from './App.js';\nimport { UserContext } from './UserProvider.js';\n\n\nasync function proceedClick(email, password, confPassword, first, last){\n\n    \n    if (password !== confPassword) {\n        window.alert(\"Passwords don't match\")\n    } else if (first === '' || last === '') {\n        window.alert(\"Must enter firstname and lastname\");\n    } else {\n        try {\n            // make new user in firebase\n            let result = await auth.createUserWithEmailAndPassword(email, password);\n\n\n            window.open('/checkout');\n\n            await result.user.updateProfile({\n                    firstName: first,\n                    lastName: last\n            });\n            \n            \n\n        } catch (err) {\n            window.alert(err);\n        }\n        \n    }\n}\n\nfunction SignUp(prop) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confPassword, setConf] = useState('');\n  const [first, setFirst] = useState('');\n  const [last, setLast] = useState('');\n\n    return (\n        <div className=\"signup-container\">\n          <div className=\"signup-content\">\n            <p className='detail-text full-width'>Email</p>\n            <input className='full-width' type='text' placeholder=\"Email\" onChange={e=>setEmail(e.target.value)} />\n            <div className=\"name-section\">\n                <p className='detail-text'>First Name</p>\n                <input type='text' placeholder=\"First Name\" onChange={e=>setFirst(e.target.value)} />\n            </div>\n            <div className=\"name-section\">\n                <p className='detail-text'>Last Name</p>\n                <input type='text' placeholder=\"Last Name\" onChange={e=>setLast(e.target.value)} />\n            </div>\n            <p className='detail-text full-width'>Password</p>\n            <input className=\"full-width\" type='password' placeholder=\"Password\" onChange={e=>setPassword(e.target.value)} />\n            <input className=\"full-width\" type='password' placeholder=\"Confirm Password\" onChange={e=>setConf(e.target.value)} />\n            <button className=\"signup-btn\" onClick={()=>proceedClick(email, password, confPassword, first, last)} >Sign Up</button>\n          </div>\n      </div>\n      );\n}\n\nexport default SignUp;","import React from 'react';\n \n\n\nclass Success extends React.Component { \n\n    render() {\n        return(\n            <p>Success!</p>\n        )\n    }\n}\n\n\n\n\n\n\nexport default Success;","import React, {useContext} from \"react\";\nimport \"./styles.css\";\nimport StripeCheckout from './StripeCheckout';\nimport SignUp from './SignUp';\nimport { \n  Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport UserContext from './UserProvider';\nimport { createBrowserHistory } from 'history';\nimport UserProvider from './UserProvider';\nimport Success from './Success';\n\n// history allows us to change pages by pushing to history\nexport const page = createBrowserHistory();\n\nexport default function App() {\n\n  const user = useContext(UserContext);\n   \n  return (\n    <UserProvider>\n    <div className=\"App\">\n      <h1>COMP 523 Team H Demo: Stripe</h1>\n      <h2>Let's checkout!</h2>\n      <Router history={page}>\n        <Switch>\n          <Route path=\"/checkout\">\n          {<StripeCheckout/>} \n            </Route>\n          <Route path=\"/success\">\n          {<Success/>} \n            </Route> />\n          <Route exact path=\"/\">\n          {<SignUp/>} \n            </Route>\n        </Switch>\n      </Router>\n    </div>\n    </UserProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\n\n//const firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\n// Set the configuration for your app\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst config = {\n  apiKey: \"AIzaSyCxUFp3R5sqvuEcwqZFn_OTGHxUSW_UG0M\",\n  authDomain: \"stripedemo-dc2b3.firebaseapp.com\",\n  databaseURL: \"https://stripedemo-dc2b3.firebaseio.com\",\n  projectId: \"stripedemo-dc2b3\",\n  storageBucket: \"stripedemo-dc2b3.appspot.com\",\n  messagingSenderId: \"746425677564\",\n  appId: \"1:746425677564:web:1a829a89848436cf20c979\",\n  measurementId: \"G-8JNWE64PXS\"\n};\n\nfirebase.initializeApp(config);\n\nexport var db = firebase.firestore();\n\nexport const auth = firebase.auth();\nexport const currentUser = firebase.auth().currentUser;\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}